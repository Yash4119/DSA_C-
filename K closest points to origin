class Solution {
public:

    int dist(int x, int y){
        int dis = x*x+y*y;
        return dis;
    }

    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<int,vector<int>>>pq;



        for(auto it:points){
            int dis = dist(it[0],it[1]);
            if(pq.size() < k){
                pq.push({dis,it});
            }
            else{
                if(dis<pq.top().first){
                    pq.pop();
                    pq.push({dis,it});
                }
            }
        }
        vector<vector<int>>ans;
        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }

        return ans;
    }
};
